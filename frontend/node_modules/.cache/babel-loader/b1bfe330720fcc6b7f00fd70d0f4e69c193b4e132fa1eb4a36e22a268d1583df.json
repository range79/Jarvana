{"ast":null,"code":"import axios from'axios';const API_BASE_URL='http://localhost:8080';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// JAR Management APIs\nexport const jarApi={// Upload JAR file\nupload:async file=>{const formData=new FormData();formData.append('file',file);const response=await api.post('/jars/upload',formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data;},// Download JAR file\ndownload:async id=>{const response=await api.get(\"/jars/download/\".concat(id),{responseType:'blob'});return response.data;},// Delete single JAR\ndeleteSingle:async id=>{await api.delete(\"/jars/delete/\".concat(id));},// Delete all JARs\ndeleteAll:async()=>{await api.delete('/jars/delete/all');}};// JAR Info APIs\nexport const jarInfoApi={// Get JAR by ID\ngetById:async id=>{const response=await api.get(\"/info/\".concat(id));return response.data;},// Get all JARs with pagination\ngetAll:async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const response=await api.get('/info/all',{params});return response.data;}};// Execution APIs\nexport const executionApi={// Get execution status\ngetExecution:async id=>{const response=await api.get(\"/exec/\".concat(id));return response.data;},// Stream execution\nstreamExecution:id=>{return new EventSource(\"\".concat(API_BASE_URL,\"/exec/stream/\").concat(id));},// Stop execution\nstopExecution:async id=>{const response=await api.delete(\"/exec/stop/\".concat(id));return response.data;}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","jarApi","upload","file","formData","FormData","append","response","post","data","download","id","get","concat","responseType","deleteSingle","delete","deleteAll","jarInfoApi","getById","getAll","params","arguments","length","undefined","executionApi","getExecution","streamExecution","EventSource","stopExecution"],"sources":["/home/range/workdir/Jarvana/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { \n  JarMetadataDto, \n  PageJarMetadataDto, \n  ResponseDtoExecutionResponseDto,\n  PaginationParams \n} from '../types/api';\n\nconst API_BASE_URL = 'http://localhost:8080';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// JAR Management APIs\nexport const jarApi = {\n  // Upload JAR file\n  upload: async (file: File): Promise<JarMetadataDto> => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response = await api.post('/jars/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n\n  // Download JAR file\n  download: async (id: number): Promise<Blob> => {\n    const response = await api.get(`/jars/download/${id}`, {\n      responseType: 'blob',\n    });\n    return response.data;\n  },\n\n  // Delete single JAR\n  deleteSingle: async (id: number): Promise<void> => {\n    await api.delete(`/jars/delete/${id}`);\n  },\n\n  // Delete all JARs\n  deleteAll: async (): Promise<void> => {\n    await api.delete('/jars/delete/all');\n  },\n};\n\n// JAR Info APIs\nexport const jarInfoApi = {\n  // Get JAR by ID\n  getById: async (id: number): Promise<JarMetadataDto> => {\n    const response = await api.get(`/info/${id}`);\n    return response.data;\n  },\n\n  // Get all JARs with pagination\n  getAll: async (params: PaginationParams = {}): Promise<PageJarMetadataDto> => {\n    const response = await api.get('/info/all', { params });\n    return response.data;\n  },\n};\n\n// Execution APIs\nexport const executionApi = {\n  // Get execution status\n  getExecution: async (id: number): Promise<ResponseDtoExecutionResponseDto> => {\n    const response = await api.get(`/exec/${id}`);\n    return response.data;\n  },\n\n  // Stream execution\n  streamExecution: (id: number): EventSource => {\n    return new EventSource(`${API_BASE_URL}/exec/stream/${id}`);\n  },\n\n  // Stop execution\n  stopExecution: async (id: number): Promise<ResponseDtoExecutionResponseDto> => {\n    const response = await api.delete(`/exec/stop/${id}`);\n    return response.data;\n  },\n};\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAQzB,KAAM,CAAAC,YAAY,CAAG,uBAAuB,CAE5C,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,YAAY,CACrBI,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,MAAM,CAAG,CACpB;AACAC,MAAM,CAAE,KAAO,CAAAC,IAAU,EAA8B,CACrD,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEH,IAAI,CAAC,CAE7B,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAV,GAAG,CAACW,IAAI,CAAC,cAAc,CAAEJ,QAAQ,CAAE,CACxDJ,OAAO,CAAE,CACP,cAAc,CAAE,qBAClB,CACF,CAAC,CAAC,CACF,MAAO,CAAAO,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAC,QAAQ,CAAE,KAAO,CAAAC,EAAU,EAAoB,CAC7C,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAV,GAAG,CAACe,GAAG,mBAAAC,MAAA,CAAmBF,EAAE,EAAI,CACrDG,YAAY,CAAE,MAChB,CAAC,CAAC,CACF,MAAO,CAAAP,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAM,YAAY,CAAE,KAAO,CAAAJ,EAAU,EAAoB,CACjD,KAAM,CAAAd,GAAG,CAACmB,MAAM,iBAAAH,MAAA,CAAiBF,EAAE,CAAE,CAAC,CACxC,CAAC,CAED;AACAM,SAAS,CAAE,KAAAA,CAAA,GAA2B,CACpC,KAAM,CAAApB,GAAG,CAACmB,MAAM,CAAC,kBAAkB,CAAC,CACtC,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,UAAU,CAAG,CACxB;AACAC,OAAO,CAAE,KAAO,CAAAR,EAAU,EAA8B,CACtD,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAV,GAAG,CAACe,GAAG,UAAAC,MAAA,CAAUF,EAAE,CAAE,CAAC,CAC7C,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAW,MAAM,CAAE,cAAAA,CAAA,CAAsE,IAA/D,CAAAC,MAAwB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CAC1C,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAV,GAAG,CAACe,GAAG,CAAC,WAAW,CAAE,CAAES,MAAO,CAAC,CAAC,CACvD,MAAO,CAAAd,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAgB,YAAY,CAAG,CAC1B;AACAC,YAAY,CAAE,KAAO,CAAAf,EAAU,EAA+C,CAC5E,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAV,GAAG,CAACe,GAAG,UAAAC,MAAA,CAAUF,EAAE,CAAE,CAAC,CAC7C,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAED;AACAkB,eAAe,CAAGhB,EAAU,EAAkB,CAC5C,MAAO,IAAI,CAAAiB,WAAW,IAAAf,MAAA,CAAIjB,YAAY,kBAAAiB,MAAA,CAAgBF,EAAE,CAAE,CAAC,CAC7D,CAAC,CAED;AACAkB,aAAa,CAAE,KAAO,CAAAlB,EAAU,EAA+C,CAC7E,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAV,GAAG,CAACmB,MAAM,eAAAH,MAAA,CAAeF,EAAE,CAAE,CAAC,CACrD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC,CAED,cAAe,CAAAZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}